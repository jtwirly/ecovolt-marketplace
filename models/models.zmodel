enum UserStatus {
    INVITED
    VERIFIED
}

model User {
    id                   String              @id @default(uuid())
    name                 String?
    email                String?             @unique
    pictureUrl           String?             @default('https://i.imgur.com/ZdJSK3Y.jpeg')
    tokenInvitation      String?

    stripeCustomerId     String?

    status               UserStatus          @default(VERIFIED)

    // this is the role of the user for the application
    globalRole           String              @default('USER')
    password             String?             @password @omit
    createdAt            DateTime            @default(now())
    updatedAt            DateTime            @updatedAt @default(now())

    pwaSubscriptions     PwaSubscription[]   @relation("user")

    locations            Location[]          @relation("user")
    energyListings       EnergyListing[]     @relation("user")
    transactionsAsBuyer  Transaction[]       @relation("buyer")
    transactionsAsSeller Transaction[]       @relation("seller")
    energyConsumptions   EnergyConsumption[] @relation("user")
    energyProductions    EnergyProduction[]  @relation("user")

    @@auth()
    @@allow("all", auth().id == this.id)
    @@allow('all', auth().globalRole == 'ADMIN')

    //we only allow that user to register if they don't create an admin role
    @@allow("create", globalRole != 'ADMIN')
    @@allow("read", true)
}

model EnergyType {

    id                 String              @id @default(uuid())
    name               String
    description        String?

    energyListings     EnergyListing[]     @relation("energyType")
    energyConsumptions EnergyConsumption[] @relation("energyType")
    energyProductions  EnergyProduction[]  @relation("energyType")
    createdAt          DateTime            @default(now())
    updatedAt          DateTime            @updatedAt @default(now())
    @@allow("all", true)
}

model Location {

    id         String   @id @default(uuid())
    address    String?
    city       String?
    state      String?
    country    String?
    postalCode String?
    latitude   Float?
    longitude  Float?

    userId     String
    user       User?    @relation(fields: [userId], references: [id], name: "user")

    createdAt  DateTime @default(now())
    updatedAt  DateTime @updatedAt @default(now())
    @@allow("all", true)
}

model EnergyListing {

    id           String        @id @default(uuid())
    quantity     Float?
    price        Float?
    listingDate  String?
    status       String?

    userId       String
    user         User?         @relation(fields: [userId], references: [id], name: "user")
    energyTypeId String
    energyType   EnergyType?   @relation(fields: [energyTypeId], references: [id], name: "energyType")

    transactions Transaction[] @relation("energyListing")
    createdAt    DateTime      @default(now())
    updatedAt    DateTime      @updatedAt @default(now())
    @@allow("all", true)
}

model Transaction {

    id              String         @id @default(uuid())
    quantity        Float?
    totalPrice      Float?
    transactionDate String?

    buyerId         String
    buyer           User?          @relation(fields: [buyerId], references: [id], name: "buyer")
    sellerId        String
    seller          User?          @relation(fields: [sellerId], references: [id], name: "seller")
    energyListingId String
    energyListing   EnergyListing? @relation(fields: [energyListingId], references: [id], name: "energyListing")

    createdAt       DateTime       @default(now())
    updatedAt       DateTime       @updatedAt @default(now())
    @@allow("all", true)
}

model EnergyConsumption {

    id                String      @id @default(uuid())
    consumptionAmount Float?
    consumptionDate   String?

    userId            String
    user              User?       @relation(fields: [userId], references: [id], name: "user")
    energyTypeId      String
    energyType        EnergyType? @relation(fields: [energyTypeId], references: [id], name: "energyType")

    createdAt         DateTime    @default(now())
    updatedAt         DateTime    @updatedAt @default(now())
    @@allow("all", true)
}

model EnergyProduction {

    id               String      @id @default(uuid())
    productionAmount Float?
    productionDate   String?

    userId           String
    user             User?       @relation(fields: [userId], references: [id], name: "user")
    energyTypeId     String
    energyType       EnergyType? @relation(fields: [energyTypeId], references: [id], name: "energyType")

    createdAt        DateTime    @default(now())
    updatedAt        DateTime    @updatedAt @default(now())
    @@allow("all", true)
}

model PwaSubscription {
    id        String   @id @default(uuid())
    content   String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt @default(now())

    userId    String   @default(auth().id)
    user      User     @relation(fields: [userId], references: [id], name: 'user')

    @@allow("all", true)
}

